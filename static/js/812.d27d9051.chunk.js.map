{"version":3,"file":"static/js/812.d27d9051.chunk.js","mappings":"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","sources":["components/MoviesList/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/components/AdditionalInfo/AdditionalInfo.module.css?0bf0","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetailsPage.jsx","pages/MoviesPage.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage.module.css?6c65","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage.module.css?f2bc"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieListItem({ title, id }) {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, _setSearchParams] = useSearchParams();\n\n  return (\n    <li>\n      <Link\n        to={`/goit-react-hw-05-movies/movies/${id}`}\n        state={{\n          location: useLocation().pathname,\n          search: searchParams.get('query'),\n        }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n}\n\nMovieListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import MovieListItem from './MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ movies }) {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <MovieListItem key={id} title={title} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport api from 'services/api';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    api.getTrendingMovies().then(data => setMovies(data.results))\n  }, [])\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {movies.length !== 0 && <MoviesList movies={movies} />}\n    </main>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"AdditionalInfo_list__EX8AT\"};","import { useParams, Link, Outlet } from 'react-router-dom';\nimport s from './AdditionalInfo.module.css';\n\nexport default function AdditionalInfo() {\n  const { movieId } = useParams();\n  const NAVIGATION = ['Cast', 'Reviews'];\n\n  return (\n    <>\n      <ul className={s.list}>\n        {NAVIGATION.map((page, index) => {\n          return (\n            <li key={index}>\n              <Link\n                to={`/goit-react-hw-05-movies/movies/${movieId}/${page.toLowerCase()}`}\n              >\n                {page}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n","import { useState, useRef } from 'react';\nimport api from 'services/api';\nimport AdditionalInformation from 'components/AdditionalInfo/AdditionalInfo';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport s from './MovieDetailsPage.module.css';\nimport { useEffect } from 'react';\n\nexport default function MovieDetailsPage() {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams();\n\n  const locationRef = useRef(useLocation().state);\n\n  useEffect(() => {\n    try {\n      const response = api.fetchMoviesWithId(movieId);\n      response.then(data => {\n        const {\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        } = data.data;\n        setMovieDetails({\n          title,\n          overview,\n          poster_path,\n          vote_average,\n          genres,\n          release_date,\n        });\n      });\n    } catch (error) {}\n  }, [movieId]);\n\n  if (movieDetails) {\n    const { title, overview, poster_path, vote_average, genres, release_date } =\n      movieDetails;\n\n    return (\n      <>\n        {locationRef.current && (\n          <Link\n            className={s.link}\n            to={locationRef.current.location}\n            state={locationRef.current.search}\n          >\n            &#8592; Go back\n          </Link>\n        )}\n        <div className={s.info}>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            className={s.img}\n            alt={title}\n          />\n          <div className={s.text}>\n            <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\n            <p>{`User score: ${vote_average * 10}%`}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(({ name }) => `${name} `)}</p>\n          </div>\n        </div>\n        <p>Additional information</p>\n        <AdditionalInformation />\n      </>\n    );\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport api from 'services/api';\nimport s from './MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = useLocation().state || searchParams.get('query');\n\n  useEffect(() => {\n    search && searchParams.set('query', search);\n    search && onClickSearch(search);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setMoviesSearch([]);\n  }, [search]);\n\n  function onClickSearch(query) {\n    if (query) {\n      setSearchParams(`query=${query}`);\n      setMoviesSearch([]);\n      try {\n        const response = api.fetchMoviesWithQuery(query);\n        response.then(data => {\n          data.data.results.map(({ id, title }) =>\n            setMoviesSearch(m => [...m, { id, title }])\n          );\n        });\n      } catch (error) {}\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <main>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input onChange={handleChange} value={query} />\n        <button onClick={() => onClickSearch(query)}>Search</button>\n      </form>\n      {moviesSearch.length !== 0 && <MoviesList movies={moviesSearch} />}\n    </main>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsPage_link__HMlcA\",\"img\":\"MovieDetailsPage_img__qNg2u\",\"info\":\"MovieDetailsPage_info__BDDG7\",\"text\":\"MovieDetailsPage_text__CBIQ0\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__OqnPx\"};"],"names":["MovieListItem","title","id","useSearchParams","searchParams","to","state","location","useLocation","pathname","search","get","MoviesList","movies","map","HomePage","useState","setMovies","useEffect","api","then","data","results","length","AdditionalInfo","movieId","useParams","className","s","page","index","toLowerCase","MovieDetailsPage","movieDetails","setMovieDetails","locationRef","useRef","overview","poster_path","vote_average","genres","release_date","error","current","src","alt","slice","name","MoviesPage","query","setQuery","moviesSearch","setMoviesSearch","setSearchParams","onClickSearch","m","set","onSubmit","e","preventDefault","onChange","target","value","onClick"],"sourceRoot":""}