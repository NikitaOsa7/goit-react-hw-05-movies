{"version":3,"file":"static/js/334.5b83ad05.chunk.js","mappings":"iPAGe,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGR,OACI,iCACI,eAAIE,UAAWC,EAAAA,KAAf,SAJY,CAAC,OAAQ,WAKJC,KAAI,SAACC,EAAMC,GACpB,OACI,yBACI,SAAC,KAAD,CACIC,GAAE,0CAAqCP,EAArC,YAAgDK,EAAKG,eAD3D,SAGKH,KAJAC,SAUrB,SAAC,KAAD,O,cCdG,SAASG,IACpB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQZ,GAAYC,EAAAA,EAAAA,MAAZD,QAEFa,GAAcC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,MAAcC,OA2BzC,IAxBAC,EAAAA,EAAAA,YAAU,WACN,IACqBC,EAAAA,EAAAA,gBAAoBlB,GAC5BmB,MAAK,SAAAC,GACV,MAOIA,EAAKA,KANLC,EADJ,EACIA,MACAC,EAFJ,EAEIA,SACAC,EAHJ,EAGIA,YACAC,EAJJ,EAIIA,aACAC,EALJ,EAKIA,OACAC,EANJ,EAMIA,aAEJd,EAAgB,CACZS,MAAAA,EACAE,YAAAA,EACAD,SAAAA,EACAG,OAAAA,EACAC,aAAAA,EACAF,aAAAA,OAGV,MAAOG,OACV,CAAC3B,IAEAW,EAAc,CACd,IAAQU,EAAqEV,EAArEU,MAAOI,EAA8Dd,EAA9Dc,OAAQH,EAAsDX,EAAtDW,SAAUI,EAA4Cf,EAA5Ce,aAAcH,EAA8BZ,EAA9BY,YAAaC,EAAiBb,EAAjBa,aAE5D,OACI,gCACKX,EAAYe,UACT,SAAC,KAAD,CACI1B,UAAWC,EAAAA,EAAAA,KACXI,GAAIM,EAAYe,QAAQC,SACxBb,MAAOH,EAAYe,QAAQE,OAH/B,sBAQJ,iBAAK5B,UAAWC,EAAAA,EAAAA,KAAhB,WACI,gBACI4B,IAAG,yCAAoCR,GACvCrB,UAAWC,EAAAA,EAAAA,IACX6B,IAAKX,KAET,iBAAKnB,UAAWC,EAAAA,EAAAA,KAAhB,WACI,kCAAQkB,EAAR,aAAkBK,EAAaO,MAAM,EAAG,GAAxC,QACA,6CAAkC,GAAfT,EAAnB,QACA,sCACA,uBAAIF,KACJ,oCACA,uBAAIG,EAAOrB,KAAI,gBAAG8B,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,iBAGvB,mDACA,SAACnC,EAAD,U,mBCpEhB,KAAgB,KAAO","sources":["components/AffitionalInfo/AdditionalInfo.jsx","pages/MovieDetailsPage.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviesPage.module.css?f2bc"],"sourcesContent":["import { useParams, Link, Outlet } from \"react-router-dom\";\r\nimport s from '../AffitionalInfo/AdditionalInfo.jsx';\r\n\r\nexport default function AdditionalInfo() {\r\n    const { movieId } = useParams();\r\n    const NAVIGATTION = ['Cast', 'Reviews'];\r\n\r\n    return (\r\n        <>\r\n            <ul className={s.list}>\r\n                {NAVIGATTION.map((page, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <Link\r\n                                to={`/goit-react-hw-05-movies/movies/${movieId}/${page.toLowerCase()}`}\r\n                            >\r\n                                {page}\r\n                            </Link>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <Outlet />\r\n        </>\r\n    );\r\n}","import { useState, useRef } from 'react';\r\nimport { useEffect } from 'react';\r\nimport s from './MoviesPage.module.css'\r\nimport { Link, useParams, useLocation } from 'react-router-dom';\r\nimport AdditionalInfo from 'components/AffitionalInfo/AdditionalInfo';\r\nimport api from 'services/api';\r\n\r\n\r\nexport default function MovieDetailsPage() {\r\n    const [movieDetails, setMovieDetails] = useState(null);\r\n    const { movieId } = useParams();\r\n\r\n    const locationRef = useRef(useLocation().state);\r\n\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const response = api.fetchMoviesById(movieId);\r\n            response.then(data => {\r\n                const {\r\n                    title,\r\n                    overview,\r\n                    poster_path,\r\n                    vote_average,\r\n                    genres,\r\n                    release_date,\r\n                } = data.data;\r\n                setMovieDetails({\r\n                    title,\r\n                    poster_path,\r\n                    overview,\r\n                    genres,\r\n                    release_date,\r\n                    vote_average,\r\n                });\r\n            });\r\n        } catch (error) { }\r\n    }, [movieId]);\r\n\r\n    if (movieDetails) {\r\n        const { title, genres, overview, release_date, poster_path, vote_average } = movieDetails;\r\n\r\n        return (\r\n            <>\r\n                {locationRef.current && (\r\n                    <Link\r\n                        className={s.link}\r\n                        to={locationRef.current.location}\r\n                        state={locationRef.current.search}\r\n                    >\r\n                        Go back\r\n                    </Link>\r\n                )}\r\n                <div className={s.info}>\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n                        className={s.img}\r\n                        alt={title}\r\n                    />\r\n                    <div className={s.text}>\r\n                        <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\r\n                        <p>{`User score: ${vote_average * 10}%`}</p>\r\n                        <h3>Overview</h3>\r\n                        <p>{overview}</p>\r\n                        <h3>Genres</h3>\r\n                        <p>{genres.map(({ name }) => `${name} `)}</p>\r\n                    </div>\r\n                </div>\r\n                <p>Additional information</p>\r\n                <AdditionalInfo />\r\n            </>\r\n        );\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__OqnPx\"};"],"names":["AdditionalInfo","movieId","useParams","className","s","map","page","index","to","toLowerCase","MovieDetailsPage","useState","movieDetails","setMovieDetails","locationRef","useRef","useLocation","state","useEffect","api","then","data","title","overview","poster_path","vote_average","genres","release_date","error","current","location","search","src","alt","slice","name"],"sourceRoot":""}